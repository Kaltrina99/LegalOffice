@using LegalOfficeWeb_Business.Service.IService
@using LegalOfficeWeb_Models
<form id="form1">
<div>
        Reason:
        <select @bind="@selectedReason">
                <option value="1">Mungon ID</option>
                <option value="2">ID Gabim</option>
                <option value="3">I/e vdekur</option>
                <option value="4">Mungojne fotografite/fotografite e paqarta</option>
                <option value="5">Mungon procesverbali origjinal i terrenit  </option>
                <option value="6">Mungon procesverbali origjinal i kalibrimit</option>
                <option value="7">Mungon procesverbali origjinal i nderrimit te njehsorit  </option>
                <option value="8">Mungojne zyrtaret e MTI-se ne raportin e kalibrimit</option>
                <option value="9">Mungojne te dhenat e qiramarresit</option>
                <option value="10">Vlera e vogel</option>
                <option value="11">Tjera</option>
        </select>
    </div>
    <div>
        Doc Location:
        <select @bind="@selectedLocation">
                <option value="1">Legal Office</option>
                <option value="2">Customer Care</option>
        </select>
    </div>
        </form>
    <button type="submit" @onclick="(()=>UpdateCase())" form="form1" class="btn btn-primary">
            <span class="button__text">Save</span>
            <i class="button__icon fa fa-chevron-right"></i>
        </button>
@code {
    private string selectedReason = "";
    private string selectedLocation = "";
    private ReclaimLossesCaseDTO caseRequest = new();
    [Inject]
    public IReclaimLossesService _reclaimLosses { get; set; }
    [Parameter]
    public int CaseId { get; set; }
    [Parameter]
    public int UserId { get; set; }
    [Parameter]
    public string District { get; set; }
    private ReclaimLossesGetCaseDTO caseGetDTO = new();
    private async Task<ReclaimLossesCaseResponseDTO> GetCase()
    {
        caseGetDTO.CaseId = CaseId;
        caseGetDTO.UserId = 3;
        caseGetDTO.District = District;
        var get=await  _reclaimLosses.GetRLCase(caseGetDTO);
        return get;

    }
    private async Task UpdateCase()
    {
        var rez=await GetCase();
        rez.CaseId.ToString();
        //var result = await _reclaimLosses.CUDRLCase();
    }
}
